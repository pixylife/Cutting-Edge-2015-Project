/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iit.ozone.lms.view.publisher;

import com.iit.ozone.lms.view.author.*;
import com.iit.ozone.lms.controllerImpl.AuthorControllerImpl;
import com.iit.ozone.lms.entity.Author;
import com.iit.ozone.lms.resource.ComboSearch;
import java.awt.event.KeyEvent;
import java.io.IOException;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Sahan Thinusha
 */
public class UpdatePublisher extends javax.swing.JDialog {

    int id = 0;

    /**
     * Creates new form UpdateAuthor
     */
    public UpdatePublisher(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        comboLoad(cmbAuthor);
        new ComboSearch().setSearchableCombo(cmbAuthor, true, "Not Found");
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbAuthor = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnUpdate.setText("Update Author Details");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Update Author Details");

        jLabel1.setText("Name");

        jLabel3.setText("Select Author");

        cmbAuthor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Author>" }));
        cmbAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAuthorActionPerformed(evt);
            }
        });
        cmbAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbAuthorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbAuthorKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                    .addComponent(cmbAuthor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2)))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbAuthorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbAuthorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAuthorKeyPressed

    private void cmbAuthorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbAuthorKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            String id = (String) cmbAuthor.getSelectedItem();
            try {
                String[] split = id.split(",");
                String aid = split[1];
                Author a = new Author();
                a.setId(Integer.parseInt(aid));

                AuthorControllerImpl authorController = new AuthorControllerImpl();
                JSONArray array = authorController.searchAuthor(a);
                if (array.getJSONObject(0).get("id") != null) {
                    txtName.setEnabled(true);
                    txtName.setText(array.getJSONObject(0).get("name") + "");
                }
            } catch (Exception ex) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error", "Error", 0);
            }
            if (cmbAuthor.getSelectedItem() == "<Select Author>") {
                txtName.setText("");

                btnUpdate.setEnabled(false);
                txtName.setEnabled(false);

            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_cmbAuthorKeyReleased

    private void cmbAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAuthorActionPerformed

        if (cmbAuthor.getSelectedItem() != "<Select Author>") {
            String s = (String) cmbAuthor.getSelectedItem();
            try {
                String[] split = s.split(",");
                int aid = Integer.parseInt(split[1]);
                if (aid == (int) aid) {
                Author a = new Author();
                a.setId(aid);

                AuthorControllerImpl authorController = new AuthorControllerImpl();
                a = authorController.searchAuthorByID(a);

                if (!"".equals(a.getName())) {
                    txtName.setEnabled(true);
                    id = a.getId();
                    txtName.setText(a.getName());
                    btnUpdate.setEnabled(true);
                }
            }
            } catch (IOException | JSONException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "Error", "Error", 0);
            }catch(NullPointerException | NumberFormatException | ArrayIndexOutOfBoundsException e){
                
            }
        } else {
            txtName.setText("");
            btnUpdate.setEnabled(false);
            txtName.setEnabled(false);

        } // TODO add your handling code here:
    }//GEN-LAST:event_cmbAuthorActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            Author author = new Author();
            author.setId(id);
            author.setName(txtName.getText());
            AuthorControllerImpl authorController = new AuthorControllerImpl();
            int x = authorController.updateAuthor(author);
            if (x == 1) {
                JOptionPane.showMessageDialog(this, "Updated");
                txtName.setText("");
                cmbAuthor.removeAllItems();
                comboLoad(cmbAuthor);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    private void comboLoad(final JComboBox cmb) {
        try {

            AuthorControllerImpl authorController = new AuthorControllerImpl();
            JSONArray array = authorController.viewAllAuthors();

            for (int i = 0; i < array.length(); i++) {
                JSONObject jo = array.getJSONObject(i);
                cmb.addItem(jo.get("name") + "," + jo.get("id"));
            }

        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "" + ex.getMessage() + "", "Error", 0);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdatePublisher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdatePublisher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdatePublisher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdatePublisher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpdatePublisher dialog = new UpdatePublisher(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbAuthor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
